name: Databricks Cluster Python Package Installation

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          # assumes the project uses setup.py
          # see https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#caching-packages
          # for alternatives
          cache-dependency-path: setup.py
          
      - name: Create dist directory if not present
        run: mkdir -p dist

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
        
      - name: Build wheel
        run: |
          python setup.py sdist bdist_wheel
          # pip install wheel
          # python setup.py bdist_wheel
          # echo "WHEEL_NAME=$(basename "$(ls release/v0.1.9/*.whl)")" >> $GITHUB_ENV
          
      - name: Install Databricks CLI
        uses: databricks/setup-cli@main

      - name: Configure Databricks CLI
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PAT_DEV }}      
        run: |
          databricks configure --token

      - name: Push wheel to Databricks Workspace
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PAT_DEV}}
        working-directory: dist
        run: |
          WHEEL_FILE=$(ls *.whl)
          #databricks fs cp $WHEEL_FILE dbfs/Workspace/cdt-frameworks/$WHEEL_FILE --overwrite
          databricks workspace import /Workspace/cdt-frameworks/DataFactoryFramework/Release/$WHEEL_FILE --file $WHEEL_FILE --format AUTO --overwrite
